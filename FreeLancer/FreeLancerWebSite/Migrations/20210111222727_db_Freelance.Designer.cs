// <auto-generated />
using System;
using FreeLancerWebSite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FreeLancerWebSite.Migrations
{
    [DbContext(typeof(FreeLancerWebSiteContext))]
    [Migration("20210111222727_db_Freelance")]
    partial class db_Freelance
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("FreeLancerWebSite.Models.CustomerCatModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cat_id")
                        .UseIdentityColumn();

                    b.Property<int?>("CustomerCatModelID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cat_description");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cat_name");

                    b.HasKey("ID");

                    b.HasIndex("CustomerCatModelID");

                    b.ToTable("customer_cats");
                });

            modelBuilder.Entity("FreeLancerWebSite.Models.CustomerModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("customer_email");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("customer_name");

                    b.HasKey("ID");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("FreeLancerWebSite.Models.JobModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("job_id")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("job_description");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2")
                        .HasColumnName("job_end");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2")
                        .HasColumnName("job_start");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .HasColumnName("job_state");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("job_title");

                    b.HasKey("ID");

                    b.ToTable("jobs");
                });

            modelBuilder.Entity("FreeLancerWebSite.Models.QuoteModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quote_id")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("quote_amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("quote_date");

                    b.Property<int>("FinalAmount")
                        .HasColumnType("int")
                        .HasColumnName("quote_final_amount");

                    b.Property<DateTime>("FinalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("quote_final_date");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .HasColumnName("quote_state");

                    b.HasKey("ID");

                    b.ToTable("quotes");
                });

            modelBuilder.Entity("FreeLancerWebSite.Models.CustomerCatModel", b =>
                {
                    b.HasOne("FreeLancerWebSite.Models.CustomerCatModel", null)
                        .WithMany("Customers")
                        .HasForeignKey("CustomerCatModelID");
                });

            modelBuilder.Entity("FreeLancerWebSite.Models.CustomerCatModel", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
